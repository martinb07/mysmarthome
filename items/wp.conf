[wp]

[[status]]
[[[heizbetrieb]]]
    type = num
    visu = yes
    waterkotte = stat_heizbetrieb
    sqlite = yes
[[[heizen]]]
    type = num
    visu = yes
    waterkotte = stat_heizen
    sqlite = yes
[[[warmwasser]]]
    type = num
    visu = yes
    waterkotte = stat_ww
    sqlite = yes

[[betriebstunden]]
[[[verdichter1]]]
    type = num
    visu = yes
    waterkotte = bsz_verdichter
    sqlite = yes
	[[[[verbrauch]]]]
		[[[[[aktuell]]]]]
			type = num
			cache = on
			eval = sh.wp.betriebstunden.verdichter1() - sh.wp.betriebstunden.verdichter1.db('max', '1d', sh.minute.since.midnight.dbstr())
			eval_trigger = wp.betriebstunden.verdicher1
		[[[[[gestern]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 0 * * = 1
			eval = sh.wp.betriebstunden.verdichter1() - sh.wp.betriebstunden.verdichter1.db('max', '1d', '1d')
			[[[[[weekly_avg]]]]]
				type = num
				cache = on
				sqlite = yes
				eval = round(sh.wp.betriebstunden.verdichter1.verbrauch.gestern.db('avg', '1w'), 2)
				eval_trigger = wp.betriebstunden.verdichter1.verbrauch.gestern
		[[[[[stuendlich]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 * * * = 1
			eval = sh.wp.betriebstunden.verdichter1() - sh.wp.betriebstunden.verdichter1.db('max', '1h','1h')
		[[[[[monat]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 0 0 * = 1
			eval = sh.wp.betriebstunden.verdichter1() - sh.wp.betriebstunden.verdichter1.db('max', '1m', '1m')

[[[heizpumpe]]]
    type = num
    visu = yes
    waterkotte = bsz_heizpumpe
    sqlite = yes
	[[[[verbrauch]]]]
		[[[[[aktuell]]]]]
			type = num
			cache = on
			eval = sh.wp.betriebstunden.heizpumpe() - sh.wp.betriebstunden.heizpumpe.db('max', '1d', sh.minute.since.midnight.dbstr())
			eval_trigger = wp.betriebstunden.heizpumpe
		[[[[[gestern]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 0 * * = 1
			eval = sh.wp.betriebstunden.heizpumpe() - sh.wp.betriebstunden.heizpumpe.db('max', '1d', '1d')
			[[[[[weekly_avg]]]]]
				type = num
				cache = on
				sqlite = yes
				eval = round(sh.wp.betriebstunden.heizpumpe.verbrauch.gestern.db('avg', '1w'), 2)
				eval_trigger = wp.betriebstunden.heizpumpe.verbrauch.gestern
		[[[[[stuendlich]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 * * * = 1
			eval = sh.wp.betriebstunden.heizpumpe() - sh.wp.betriebstunden.heizpumpe.db('max', '1h','1h')
		[[[[[monat]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 0 0 * = 1
			eval = sh.wp.betriebstunden.heizpumpe() - sh.wp.betriebstunden.heizpumpe.db('max', '1m', '1m')

[[[ext_waerme]]]
    type = num
    visu = yes
    waterkotte = bsz_ext_waerme
    sqlite = yes
	[[[[verbrauch]]]]
		[[[[[aktuell]]]]]
			type = num
			cache = on
			eval = sh.wp.betriebstunden.ext_waerme() - sh.wp.betriebstunden.ext_waerme.db('max', '1d', sh.minute.since.midnight.dbstr())
			eval_trigger = wp.betriebstunden.ext_waerme
		[[[[[gestern]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 0 * * = 1
			eval = sh.wp.betriebstunden.ext_waerme() - sh.wp.betriebstunden.ext_waerme.db('max', '1d', '1d')
			[[[[[weekly_avg]]]]]
				type = num
				cache = on
				sqlite = yes
				eval = round(sh.wp.betriebstunden.ext_waerme.verbrauch.gestern.db('avg', '1w'), 2)
				eval_trigger = wp.betriebstunden.ext_waerme.verbrauch.gestern
		[[[[[stuendlich]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 * * * = 1
			eval = sh.wp.betriebstunden.ext_waerme() - sh.wp.betriebstunden.ext_waerme.db('max', '1h','1h')
		[[[[[monat]]]]]
			type = num
			cache = on
			sqlite = yes
			crontab = 0 0 0 * = 1
			eval = sh.wp.betriebstunden.ext_waerme() - sh.wp.betriebstunden.ext_waerme.db('max', '1m', '1m')


[[temp]]
[[[hk]]]
    type = num
    visu = yes
    waterkotte = temp_hk
    sqlite = yes
[[[gefordert_hk]]]
    type = num
    visu = yes
    waterkotte = temp_gefordert_hk
    sqlite = yes
[[[aussen]]]
    type = num
    visu = yes
    #waterkotte = temp_aussen
    sqlite = yes
    knx_dpt = 9
    knx_init = 0/3/1
[[[quelle_ein]]]
    type = num
    visu = yes
    waterkotte = temp_quelle_ein
    sqlite = yes
    eval = value if (sh.wp.valve.exp() > 5.0) else self()
[[[[min]]]]
		type = num
		eval = sh.wp.temp.quelle_ein() if (sh.wp.temp.quelle_ein() < sh.wp.temp.quelle_ein.db('min', '1y')) else sh.wp.temp.quelle_ein.db('min', '1y')
		eval_trigger = wp.temp.quelle_ein
[[[[min_day]]]]
		type = num
		eval = sh.wp.temp.quelle_ein() if (sh.wp.temp.quelle_ein() < sh.wp.temp.quelle_ein.db('min', sh.zeit.minutenseitmitternacht.dbstr())) else sh.wp.temp.quelle_ein.db('min', sh.zeit.minutenseitmitternacht.dbstr())
		eval_trigger = wp.temp.quelle_ein
[[[[max]]]]
		type = num
		eval = sh.wp.temp.quelle_ein.db('max', '1y')
		eval_trigger = wp.temp.quelle_ein
[[[quelle_aus]]]
    type = num
    visu =  yes
    waterkotte = temp_quelle_aus
    sqlite = yes
[[[rueck]]]
    type = num
    visu = yes
    waterkotte = temp_ruecklauf
[[[vor]]]
    type = num
    visu = yes
    waterkotte = temp_vorlauf
[[[ww]]]
    type = num
    visu =  yes
    waterkotte = temp_ww
    sqlite = yes
[[power]]
[[[therm]]]
    type = num
    visu = yes
    waterkotte = pow_therm
[[cop]]
[[[comp]]]
    type = num
    visu = yes
    waterkotte = cop_comp
[[rpm]]
[[[hk]]]
    type = num
    visu = yes
    waterkotte = rpm_hk
[[[sole]]]
    type = num
    visu = yes
    waterkotte = rpm_sole
[[valve]]
[[[exp]]]
    type = num
    visu = yes
    waterkotte = valve_exp
[[jaz]]
[[[wp]]]
    type = num
    visu = yes
    waterkotte = jaz_wp
    sqlite = yes

